apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: minio-ns
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
- kind: ServiceAccount
  name: prometheus
  namespace: minio-ns
- kind: ServiceAccount
  name: prometheus
  namespace: rook-ceph
---
apiVersion: monitoring.coreos.com/v1
kind: Prometheus
metadata:
  name: minio-prometheus
  namespace: minio-ns
  labels:
    prometheus: minio-prometheus
spec:
  serviceAccountName: prometheus
  serviceMonitorSelector:
    matchLabels:
      team: minio
  ruleSelector:
    matchLabels:
      role: alert-rules
      prometheus: minio-prometheus
  resources:
    requests:
      memory: 400Mi
  additionalScrapeConfigs:
    name: additional-scrape-configs
    key: prometheus-additional.yaml
  initContainers:
    - name: trust-ca-bundle
      image: "alpine"
      command: [sh, -c]
      args:
        - cd /tmp &&
          wget 'http://repository.egi.eu/sw/production/cas/1/current/tgz/' &&
          mkdir tgz && mkdir certificates &&
          for tgz in $(cat index.html | awk -F'"' '{print $2}' | grep tar.gz);
          do wget http://repository.egi.eu/sw/production/cas/1/current/tgz/$tgz -O tgz/$tgz;
          done && for tgz in $(ls tgz/);
          do tar xzf tgz/$tgz --strip-components=1 -C certificates/; done &&
          for f in $(find certificates/ -type f -name '*.pem'); do cat $f >> certs/ca-bundle.crt;
          cat $f >> certs/ca-bundle.trust.crt; done &&
          wget 'https://crt.sh/?d=2475254782' -O certs/geant-ov-rsa-ca.crt &&
          cat .minio/certs/CAs/ca.crt >> certs/ca-bundle.crt &&
          cat .minio/certs/CAs/ca.crt >> certs/ca-bundle.trust.crt &&
          cat certs/geant-ov-rsa-ca.crt >> certs/ca-bundle.crt &&
          cat certs/geant-ov-rsa-ca.crt >> certs/ca-bundle.trust.crt
      volumeMounts:
        - name: trust
          mountPath: /tmp/certs
        - name: certs-volume
          mountPath: /tmp/.minio/certs
  volumeMounts:
    - mountPath: /etc/ssl/certs
      name: trust
      readOnly: true
  volumes:
    - name: trust
      emptyDir: {}
    - name: certs-volume
      secret:
        secretName: tls-ssl-minio
        items:
        - key: public.crt
          path: public.crt
        - key: private.key
          path: private.key
        - key: ca.crt
          path: CAs/ca.crt

